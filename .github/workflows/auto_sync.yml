name: auto_sync

on:
#  push:
#    branches:
#      - master
  schedule:
    - cron: 0 22 * * *
  workflow_dispatch:
    inputs:

jobs:
  backup:
    runs-on: ubuntu-latest
    name: auto_sync

    steps:
      - name: Get repo and time
        id: info
        uses: actions/github-script@v3.1
        with:
          result-encoding: string
          script: |
            core.setOutput('time', new Date(Date.now()).toISOString().replace(/[^0-9]/g, ""));
            core.setOutput('key', `${context.repo.owner}-${context.repo.repo}`);
            return context.repo.repo;

      - name: Cache src repos
        uses: actions/cache@v2.1.3
        id: cache
        with:
          path: ${{ github.workspace }}/hub-mirror-cache
          key: ${{ runner.os }}-${{ steps.info.outputs.key }}-cache-${{ steps.info.outputs.time }}
          restore-keys: ${{ runner.os }}-${{ steps.info.outputs.key }}-cache-

      - name: static list
        uses: Yikun/hub-mirror-action@master
        with:
          src: github/artxia
          dst: gitee/artxia
          dst_key: ${{ secrets.GITEE_PRIVATE_KEY }}
          dst_token: ${{ secrets.GITEE_TOKEN }}
          static_list: "erpnext,frappe"
          
      - name: 'Create UUID'
        run: echo $(cat /proc/sys/kernel/random/uuid) > UUID
      
      - name: 'Commit Files'
        id: commit
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git diff --quiet && git diff --staged --quiet || git commit -am 'Keep Workflow Alive'
          echo ::set-output name=status::success
           
      - name: 'GitHub Push'
        if: steps.commit.output.status != 'success'
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          
      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@main
        with:
          retain_days: 2
          keep_minimum_runs: 6
